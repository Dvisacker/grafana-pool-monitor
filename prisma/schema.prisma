generator client {
  provider = "prisma-client-js"
}

generator kysely {
  provider = "prisma-kysely"

  // Optionally provide a destination directory for the generated file
  // and a filename of your choice
  output       = "../src/db"
  fileName     = "types.ts"
  // Optionally generate runtime enums to a separate file
  enumFileName = "enums.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table has subclasses and requires additional setup for migrations. Visit https://pris.ly/d/table-inheritance for more info.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model PoolReserve {
  /// @kyselyType(Date)
  time           DateTime @db.Timestamptz(6)
  blockNumber    Int      @map("block_number")
  networkId      Int      @map("network_id")
  poolAddress    String   @map("pool_address")
  token0Reserves String   @map("token0_reserves")
  token1Reserves String   @map("token1_reserves")

  @@id([blockNumber, networkId, poolAddress])
  @@index([time(sort: Desc)])
  @@index([blockNumber])
  @@index([networkId])
  @@index([poolAddress])
  @@map("pool_reserves")
}

model DatedBlock {
  blockNumber Int      @map("block_number")
  networkId   Int      @map("network_id")
  /// @kyselyType(Date)
  date        DateTime @map("date")

  @@id([blockNumber, networkId])
  @@index([blockNumber])
  @@index([date])
  @@map("dated_blocks")
}

// model blocks {
//   block_number BigInt
//   network_id   Int
//   timestamp    BigInt

//   @@id([block_number, network_id])
//   @@index([block_number])
//   @@index([network_id])
// }
