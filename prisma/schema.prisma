generator client {
  provider = "prisma-client-js"
}

generator kysely {
  provider = "prisma-kysely"

  // Optionally provide a destination directory for the generated file
  // and a filename of your choice
  output       = "../src/db"
  fileName     = "types.ts"
  // Optionally generate runtime enums to a separate file
  enumFileName = "enums.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Token {
  address   String @map("address")
  networkId Int    @map("network_id")
  name      String @map("name")
  symbol    String @map("symbol")
  decimals  Int    @map("decimals")

  @@id([address, networkId])
  @@index([address])
  @@index([networkId])
  @@map("tokens")
}

model Pool {
  poolAddress String @map("pool_address")
  networkId   Int    @map("network_id")
  poolType    String @map("pool_type")
  token0      String @map("token0")
  token1      String @map("token1")

  @@id([poolAddress, networkId])
  @@index([poolAddress])
  @@index([networkId])
  @@map("pools")
}

/// This table has subclasses and requires additional setup for migrations. Visit https://pris.ly/d/table-inheritance for more info.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model PoolReserve {
  /// @kyselyType(Date)
  time           DateTime @db.Timestamptz(6)
  blockNumber    Int      @map("block_number")
  networkId      Int      @map("network_id")
  poolAddress    String   @map("pool_address")
  token0Reserves String   @map("token0_reserves")
  token1Reserves String   @map("token1_reserves")

  @@id([blockNumber, networkId, poolAddress])
  @@index([time(sort: Desc)])
  @@index([blockNumber])
  @@index([networkId])
  @@index([poolAddress])
  @@map("pool_reserves")
}

// this table stores the blocks that are closest to a given date
model DatedBlock {
  blockNumber Int      @map("block_number")
  networkId   Int      @map("network_id")
  /// @kyselyType(number)
  timestamp   DateTime @map("timestamp") @db.Timestamptz(6)
  /// @kyselyType(Date)
  date        DateTime @map("date") @db.Timestamptz(6)

  @@id([blockNumber, networkId])
  @@index([blockNumber])
  @@index([date])
  @@map("dated_blocks")
}

model Block {
  blockNumber Int      @map("block_number")
  networkId   Int      @map("network_id")
  /// @kyselyType(number)
  timestamp   DateTime @map("timestamp") @db.Timestamptz(6)

  @@id([blockNumber, networkId])
  @@index([blockNumber])
  @@index([timestamp])
  @@map("blocks")
}

// model blocks {
//   block_number BigInt
//   network_id   Int
//   timestamp    BigInt

//   @@id([block_number, network_id])
//   @@index([block_number])
//   @@index([network_id])
// }
